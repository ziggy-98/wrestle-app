// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wrestler {
  id                       BigInt                @id @default(autoincrement())
  name                     String
  birthplace               String
  gender                   String
  height                   String
  weight                   String
  debut                    String?
  retired                  String
  nicknames                Json
  signature_moves          Json
  cagematch_correlation_id BigInt                @unique
  events                   Event_Wrestler[]
  titles                   Wrestler_Titles[]
  promotions               Promotion_Wrestlers[]
}

model Event {
  id                       BigInt           @id @default(autoincrement())
  name                     String
  date                     DateTime
  wrestlers                Event_Wrestler[]
  cagematch_correlation_id BigInt           @unique
  promotion_id             BigInt
  promotion                Promotion        @relation(fields: [promotion_id], references: [id])
}

model Event_Wrestler {
  event_id    BigInt
  event       Event    @relation(fields: [event_id], references: [id])
  wrestler_id BigInt
  wrestler    Wrestler @relation(fields: [wrestler_id], references: [id])

  @@id([event_id, wrestler_id])
}

model Title {
  id                       BigInt            @id @default(autoincrement())
  name                     String
  cagematch_correlation_id BigInt            @unique
  promotion_id             BigInt
  promotion                Promotion         @relation(fields: [promotion_id], references: [id])
  lineage                  Wrestler_Titles[]
}

model Wrestler_Titles {
  id          BigInt    @id @default(autoincrement())
  wrestler_id BigInt
  wrestler    Wrestler  @relation(fields: [wrestler_id], references: [id])
  title_id    BigInt
  title       Title     @relation(fields: [title_id], references: [id])
  held_from   DateTime
  held_to     DateTime?
}

model Promotion {
  id                       BigInt                @id @default(autoincrement())
  name                     String                @unique
  cagematch_correlation_id BigInt                @unique
  titles                   Title[]
  alumni                   Promotion_Wrestlers[]
  events                   Event[]
}

model Promotion_Wrestlers {
  id           BigInt    @id @default(autoincrement())
  promotion_id BigInt
  promotion    Promotion @relation(fields: [promotion_id], references: [id])
  wrestler_id  BigInt
  wrestler     Wrestler  @relation(fields: [wrestler_id], references: [id])
  debut        Int       @db.SmallInt
  exit         Int?      @db.SmallInt
}
