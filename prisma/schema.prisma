// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wrestler {
  id             BigInt                @id @default(autoincrement())
  birthplace     String
  gender         String
  height         String
  weight         String
  debut          String
  retired        String
  nicknames      Json
  signatureMoves Json
  matches        Match_Wrestlers[]
  titles         Wrestler_Titles[]
  promotions     Promotion_Wrestlers[]
}

model Event {
  id      BigInt  @id @default(autoincrement())
  name    String
  matches Match[]
}

model Match {
  id        BigInt            @id @default(autoincrement())
  event_id  BigInt
  event     Event             @relation(fields: [event_id], references: [id])
  wrestlers Match_Wrestlers[]
}

model Match_Wrestlers {
  match_id    BigInt
  match       Match    @relation(fields: [match_id], references: [id])
  wrestler_id BigInt
  wrestler    Wrestler @relation(fields: [wrestler_id], references: [id])

  @@id([match_id, wrestler_id])
}

model Title {
  id           BigInt            @id @default(autoincrement())
  name         String            @unique
  promotion_id BigInt
  promotion    Promotion         @relation(fields: [promotion_id], references: [id])
  lineage      Wrestler_Titles[]
}

model Wrestler_Titles {
  wrestler_id BigInt
  wrestler    Wrestler @relation(fields: [wrestler_id], references: [id])
  title_id    BigInt
  title       Title    @relation(fields: [title_id], references: [id])

  @@id([wrestler_id, title_id])
}

model Promotion {
  id     BigInt                @id @default(autoincrement())
  name   String                @unique
  titles Title[]
  alumni Promotion_Wrestlers[]
}

model Promotion_Wrestlers {
  promotion_id BigInt
  promotion    Promotion @relation(fields: [promotion_id], references: [id])
  wrestler_id  BigInt
  wrestler     Wrestler  @relation(fields: [wrestler_id], references: [id])

  @@id([wrestler_id, promotion_id])
}
